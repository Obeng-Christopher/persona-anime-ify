// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dajghtnduzkdpdgglany.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRhamdodG5kdXprZHBkZ2dsYW55Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY0MTc3MzksImV4cCI6MjA3MTk5MzczOX0.jJ3k1JAPqUQZO0kthL72NR0_A1RRoqwDmvtpAWgEFtc";

// Create the main supabase client
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Helper function to get authenticated supabase client for a specific user
export const getAuthenticatedSupabase = (userId: string) => {
  // Since we're using Clerk for auth, we'll use the anon key but ensure RLS policies work
  // The RLS policies in the database check against auth.uid() which should match the Clerk user ID
  return supabase;
};

// Helper function to ensure user profile exists
export const ensureUserProfile = async (userId: string, userData: { email: string; name?: string; avatar_url?: string }) => {
  try {
    // First try to get existing profile
    const { data: existingProfile, error: fetchError } = await supabase
      .from('users')
      .select('*')
      .eq('id', userId)
      .single();

    if (fetchError && fetchError.code === 'PGRST116') {
      // Profile doesn't exist, create it
      const { data: newProfile, error: createError } = await supabase
        .from('users')
        .insert({
          id: userId,
          email: userData.email,
          name: userData.name || null,
          avatar_url: userData.avatar_url || null
        })
        .select()
        .single();

      if (createError) throw createError;
      return newProfile;
    }

    if (fetchError) throw fetchError;
    return existingProfile;
  } catch (error) {
    console.error('Error ensuring user profile:', error);
    throw error;
  }
};